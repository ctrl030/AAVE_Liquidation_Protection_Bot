// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package repayment

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// RepaymentABI is the input ABI used to generate the binding from.
const RepaymentABI = "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ADDRESSES_PROVIDER\",\"outputs\":[{\"internalType\":\"contractILendingPoolAddressesProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LENDING_POOL\",\"outputs\":[{\"internalType\":\"contractILendingPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_cAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_dAsset\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_oneInchSwapCalldata\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_premiums\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_params\",\"type\":\"bytes\"}],\"name\":\"executeOperation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_aToken\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_oneInchSwapCalldata\",\"type\":\"bytes\"}],\"name\":\"oneInchSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_aToken\",\"type\":\"address\"}],\"name\":\"underlyingAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]"

// RepaymentBin is the compiled bytecode used for deploying new contracts.
var RepaymentBin = "0x60e06040523480156200001157600080fd5b5073b53c1a33016b2dc2ff3653530bff1848a515c8c573ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050737d2768de32b0b80b7a3454c06bdac94a69ddc7a973ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b8152505060004690506200017d60405180608001604052806040518060400160405280601f81526020017f41415645204c69717569646174696f6e2050726f74656374696f6e20426f740081525081526020016040518060400160405280600181526020017f310000000000000000000000000000000000000000000000000000000000000081525081526020018381526020016040518060400160405280602081526020017f5355254e36676d756d766a2e417b40422c536457587456676728426f663953418152508152506200018b60201b60201c565b60c08181525050506200029d565b60007f613742be5859fb0eadf208d5acbaea935189bb3cdb9686525166ede1daab2eb98260000151805190602001208360200151805190602001208460400151856060015180519060200120604051602001620001ed9594939291906200022c565b604051602081830303815290604052805190602001209050919050565b620002158162000289565b82525050565b620002268162000293565b82525050565b600060a0820190506200024360008301886200020a565b6200025260208301876200020a565b6200026160408301866200020a565b6200027060608301856200021b565b6200027f60808301846200020a565b9695505050505050565b6000819050919050565b6000819050919050565b60805160601c60a05160601c60c051612a9c620002ee60003980610f70525080610459528061052952806107a45280610a365280610c47528061119f52806113dd5250806101515250612a9c6000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630542975c14610067578063282fe23e14610085578063920f5c84146100b5578063a64b5b8a146100e5578063b4dcfc7714610115578063f1742a6114610133575b600080fd5b61006f61014f565b60405161007c919061256f565b60405180910390f35b61009f600480360381019061009a9190611a63565b610173565b6040516100ac9190612715565b60405180910390f35b6100cf60048036038101906100ca9190611b5e565b610326565b6040516100dc91906124e6565b60405180910390f35b6100ff60048036038101906100fa9190611a11565b610652565b60405161010c919061231f565b60405180910390f35b61011d6107a2565b60405161012a919061258a565b60405180910390f35b61014d60048036038101906101489190611ab7565b6107c6565b005b7f000000000000000000000000000000000000000000000000000000000000000081565b60008061017f84610652565b90508073ffffffffffffffffffffffffffffffffffffffff1663095ea7b373111111125434b319222cdbf8c261674adb56f3ae7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b81526004016101f09291906123fc565b602060405180830381600087803b15801561020a57600080fd5b505af115801561021e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102429190611c46565b506000606073111111125434b319222cdbf8c261674adb56f3ae73ffffffffffffffffffffffffffffffffffffffff168560405161028091906122d1565b6000604051808303816000865af19150503d80600081146102bd576040519150601f19603f3d011682016040523d82523d6000602084013e6102c2565b606091505b509150915081610307576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102fe906125e5565b60405180910390fd5b8080602001905181019061031b9190611ced565b935050505092915050565b600061033061149d565b606084848101906103419190611c6f565b91509150816040015173ffffffffffffffffffffffffffffffffffffffff1663095ea7b3737d2768de32b0b80b7a3454c06bdac94a69ddc7a97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b81526004016103b89291906123fc565b602060405180830381600087803b1580156103d257600080fd5b505af11580156103e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040a9190611c46565b610449576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044090612665565b60405180910390fd5b6000808360600151111561051a577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663573ade8184604001518560600151600187600001516040518563ffffffff1660e01b81526004016104c3949392919061245c565b602060405180830381600087803b1580156104dd57600080fd5b505af11580156104f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105159190611ced565b810190505b6000836080015111156105ea577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663573ade8184604001518560800151600287600001516040518563ffffffff1660e01b815260040161059394939291906124a1565b602060405180830381600087803b1580156105ad57600080fd5b505af11580156105c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e59190611ced565b810190505b6105fc83600001518460200151610adc565b5061060b836020015183610173565b5061063e838a8a600081811061061d57fe5b905060200201358d8d600081811061063157fe5b9050602002013501610d1e565b600193505050509998505050505050505050565b60008060608373ffffffffffffffffffffffffffffffffffffffff166040516024016040516020818303038152906040527fb16a19de000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516106fe91906122d1565b6000604051808303816000865af19150503d806000811461073b576040519150601f19603f3d011682016040523d82523d6000602084013e610740565b606091505b509150915081610785576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077c90612605565b60405180910390fd5b808060200190518101906107999190611a3a565b92505050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6107d08585610f6c565b6000806107dd8488611061565b91509150600081830111610826576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081d906126c5565b60405180910390fd5b60008183019050600061083887611193565b905061084261149d565b6040518060a001604052808b73ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff168152602001868152602001858152509050606081876040516020016108c29291906126e5565b60405160208183030381529060405290506060600167ffffffffffffffff811180156108ed57600080fd5b5060405190808252806020026020018201604052801561091c5781602001602082028036833780820191505090505b509050888160008151811061092d57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506060600167ffffffffffffffff8111801561098157600080fd5b506040519080825280602002602001820160405280156109b05781602001602082028036833780820191505090505b50905085816000815181106109c157fe5b6020026020010181815250506060600167ffffffffffffffff811180156109e757600080fd5b50604051908082528060200260200182016040528015610a165781602001602082028036833780820191505090505b509050600081600081518110610a2857fe5b6020026020010181815250507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ab9c4b5d30858585308a60006040518863ffffffff1660e01b8152600401610a9a9796959493929190612371565b600060405180830381600087803b158015610ab457600080fd5b505af1158015610ac8573d6000803e3d6000fd5b505050505050505050505050505050505050565b6000808273ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b8152600401610b18919061231f565b60206040518083038186803b158015610b3057600080fd5b505afa158015610b44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b689190611ced565b90508273ffffffffffffffffffffffffffffffffffffffff166323b872dd8530846040518463ffffffff1660e01b8152600401610ba79392919061233a565b602060405180830381600087803b158015610bc157600080fd5b505af1158015610bd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf99190611c46565b610c38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2f90612625565b60405180910390fd5b6000610c4384610652565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166369328dec827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff306040518463ffffffff1660e01b8152600401610cc293929190612425565b602060405180830381600087803b158015610cdc57600080fd5b505af1158015610cf0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d149190611ced565b9250505092915050565b6000826040015190508073ffffffffffffffffffffffffffffffffffffffff1663095ea7b3737d2768de32b0b80b7a3454c06bdac94a69ddc7a9846040518363ffffffff1660e01b8152600401610d769291906123fc565b602060405180830381600087803b158015610d9057600080fd5b505af1158015610da4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc89190611c46565b610e07576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dfe906125c5565b60405180910390fd5b6000828273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610e43919061231f565b60206040518083038186803b158015610e5b57600080fd5b505afa158015610e6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e939190611ced565b0390508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8560000151836040518363ffffffff1660e01b8152600401610ed59291906123fc565b602060405180830381600087803b158015610eef57600080fd5b505af1158015610f03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f279190611c46565b610f66576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5d90612645565b60405180910390fd5b50505050565b60007f0000000000000000000000000000000000000000000000000000000000000000610fbc60405180602001604052803373ffffffffffffffffffffffffffffffffffffffff16815250611256565b604051602001610fcd9291906122e8565b6040516020818303038152906040528051906020012090508273ffffffffffffffffffffffffffffffffffffffff1661100682846112ac565b73ffffffffffffffffffffffffffffffffffffffff161461105c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105390612685565b60405180910390fd5b505050565b600080600080611070866113d0565b915091508173ffffffffffffffffffffffffffffffffffffffff166370a08231866040518263ffffffff1660e01b81526004016110ad919061231f565b60206040518083038186803b1580156110c557600080fd5b505afa1580156110d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110fd9190611ced565b8173ffffffffffffffffffffffffffffffffffffffff166370a08231876040518263ffffffff1660e01b8152600401611136919061231f565b60206040518083038186803b15801561114e57600080fd5b505afa158015611162573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111869190611ced565b9350935050509250929050565b600061119d61150e565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166335ea6a75846040518263ffffffff1660e01b81526004016111f6919061231f565b6101806040518083038186803b15801561120f57600080fd5b505afa158015611223573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112479190611cc3565b90508060e00151915050919050565b60007f5acce4118754599ab021c0a0f4b08f773105fab742d49f4198d03607f2968c29826000015160405160200161128f929190612501565b604051602081830303815290604052805190602001209050919050565b600060418251146112f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112e9906126a5565b60405180910390fd5b60008060006020850151925060408501519150606085015160001a9050601b8160ff16101561132257601b810190505b601b8160ff1614806113375750601c8160ff16145b611376576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161136d906125a5565b60405180910390fd5b60018682858560405160008152602001604052604051611399949392919061252a565b6020604051602081039080840390855afa1580156113bb573d6000803e3d6000fd5b50505060206040510351935050505092915050565b6000806113db61150e565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166335ea6a75856040518263ffffffff1660e01b8152600401611434919061231f565b6101806040518083038186803b15801561144d57600080fd5b505afa158015611461573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114859190611cc3565b90508061010001518161012001519250925050915091565b6040518060a00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b604051806101800160405280611522611631565b815260200160006fffffffffffffffffffffffffffffffff16815260200160006fffffffffffffffffffffffffffffffff16815260200160006fffffffffffffffffffffffffffffffff16815260200160006fffffffffffffffffffffffffffffffff16815260200160006fffffffffffffffffffffffffffffffff168152602001600064ffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600060ff1681525090565b6040518060200160405280600081525090565b600081359050611653816129c5565b92915050565b600081519050611668816129c5565b92915050565b60008151905061167d816129dc565b92915050565b60008083601f84011261169557600080fd5b8235905067ffffffffffffffff8111156116ae57600080fd5b6020830191508360208202830111156116c657600080fd5b9250929050565b60008083601f8401126116df57600080fd5b8235905067ffffffffffffffff8111156116f857600080fd5b60208301915083602082028301111561171057600080fd5b9250929050565b600081519050611726816129f3565b92915050565b60008083601f84011261173e57600080fd5b8235905067ffffffffffffffff81111561175757600080fd5b60208301915083600182028301111561176f57600080fd5b9250929050565b600082601f83011261178757600080fd5b813561179a6117958261275d565b612730565b915080825260208301602083018583830111156117b657600080fd5b6117c1838284612968565b50505092915050565b600060a082840312156117dc57600080fd5b6117e660a0612730565b905060006117f684828501611644565b600083015250602061180a84828501611644565b602083015250604061181e84828501611644565b6040830152506060611832848285016119bd565b6060830152506080611846848285016119bd565b60808301525092915050565b60006020828403121561186457600080fd5b61186e6020612730565b9050600061187e848285016119d2565b60008301525092915050565b6000610180828403121561189d57600080fd5b6118a8610180612730565b905060006118b884828501611852565b60008301525060206118cc848285016119a8565b60208301525060406118e0848285016119a8565b60408301525060606118f4848285016119a8565b6060830152506080611908848285016119a8565b60808301525060a061191c848285016119a8565b60a08301525060c0611930848285016119e7565b60c08301525060e061194484828501611659565b60e08301525061010061195984828501611659565b6101008301525061012061196f84828501611659565b6101208301525061014061198584828501611659565b6101408301525061016061199b848285016119fc565b6101608301525092915050565b6000815190506119b781612a0a565b92915050565b6000813590506119cc81612a21565b92915050565b6000815190506119e181612a21565b92915050565b6000815190506119f681612a38565b92915050565b600081519050611a0b81612a4f565b92915050565b600060208284031215611a2357600080fd5b6000611a3184828501611644565b91505092915050565b600060208284031215611a4c57600080fd5b6000611a5a8482850161166e565b91505092915050565b60008060408385031215611a7657600080fd5b6000611a8485828601611644565b925050602083013567ffffffffffffffff811115611aa157600080fd5b611aad85828601611776565b9150509250929050565b600080600080600060a08688031215611acf57600080fd5b6000611add88828901611644565b955050602086013567ffffffffffffffff811115611afa57600080fd5b611b0688828901611776565b9450506040611b1788828901611644565b9350506060611b2888828901611644565b925050608086013567ffffffffffffffff811115611b4557600080fd5b611b5188828901611776565b9150509295509295909350565b600080600080600080600080600060a08a8c031215611b7c57600080fd5b60008a013567ffffffffffffffff811115611b9657600080fd5b611ba28c828d01611683565b995099505060208a013567ffffffffffffffff811115611bc157600080fd5b611bcd8c828d016116cd565b975097505060408a013567ffffffffffffffff811115611bec57600080fd5b611bf88c828d016116cd565b95509550506060611c0b8c828d01611644565b93505060808a013567ffffffffffffffff811115611c2857600080fd5b611c348c828d0161172c565b92509250509295985092959850929598565b600060208284031215611c5857600080fd5b6000611c6684828501611717565b91505092915050565b60008060c08385031215611c8257600080fd5b6000611c90858286016117ca565b92505060a083013567ffffffffffffffff811115611cad57600080fd5b611cb985828601611776565b9150509250929050565b60006101808284031215611cd657600080fd5b6000611ce48482850161188a565b91505092915050565b600060208284031215611cff57600080fd5b6000611d0d848285016119d2565b91505092915050565b6000611d228383611d46565b60208301905092915050565b6000611d3a83836122a4565b60208301905092915050565b611d4f8161283e565b82525050565b611d5e8161283e565b82525050565b6000611d6f826127a9565b611d7981856127e4565b9350611d8483612789565b8060005b83811015611db5578151611d9c8882611d16565b9750611da7836127ca565b925050600181019050611d88565b5085935050505092915050565b6000611dcd826127b4565b611dd781856127f5565b9350611de283612799565b8060005b83811015611e13578151611dfa8882611d2e565b9750611e05836127d7565b925050600181019050611de6565b5085935050505092915050565b611e2981612862565b82525050565b611e388161286e565b82525050565b611e4f611e4a8261286e565b6129aa565b82525050565b6000611e60826127bf565b611e6a8185612806565b9350611e7a818560208601612977565b611e83816129b4565b840191505092915050565b6000611e99826127bf565b611ea38185612817565b9350611eb3818560208601612977565b80840191505092915050565b611ec8816128ea565b82525050565b611ed78161290e565b82525050565b611ee681612932565b82525050565b611ef581612944565b82525050565b611f0481612956565b82525050565b6000611f17600283612833565b91507f19010000000000000000000000000000000000000000000000000000000000006000830152600282019050919050565b6000611f57601283612822565b91507f7620776173206e6f74203237206f7220323800000000000000000000000000006000830152602082019050919050565b6000611f97602683612822565b91507f6661696c656420746f20617070726f766520666c617368206c6f616e2072657060008301527f61796d656e7400000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611ffd601483612822565b91507f6f6e6520696e63682073776170206661696c65640000000000000000000000006000830152602082019050919050565b600061203d601e83612822565b91507f6661696c656420746f2067657420756e6465726c79696e6720617373657400006000830152602082019050919050565b600061207d601a83612822565b91507f636f6c6c61746572616c207472616e73666572206661696c65640000000000006000830152602082019050919050565b60006120bd602583612822565b91507f7472616e7366657272696e672072656d61696e64657220746f2075736572206660008301527f61696c65640000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612123602283612822565b91507f6661696c656420746f20617070726f766520746865206c656e64696e6720706f60008301527f6f6c0000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612189601483612822565b91507f7369676e657220646964206e6f74206d617463680000000000000000000000006000830152602082019050919050565b60006121c9601683612822565b91507f77726f6e67207369676e6174757265206c656e677468000000000000000000006000830152602082019050919050565b6000612209600e83612822565b91507f64656274206e6f7420666f756e640000000000000000000000000000000000006000830152602082019050919050565b60a0820160008201516122526000850182611d46565b5060208201516122656020850182611d46565b5060408201516122786040850182611d46565b50606082015161228b60608501826122a4565b50608082015161229e60808501826122a4565b50505050565b6122ad816128c2565b82525050565b6122bc816128c2565b82525050565b6122cb816128dd565b82525050565b60006122dd8284611e8e565b915081905092915050565b60006122f382611f0a565b91506122ff8285611e3e565b60208201915061230f8284611e3e565b6020820191508190509392505050565b60006020820190506123346000830184611d55565b92915050565b600060608201905061234f6000830186611d55565b61235c6020830185611d55565b61236960408301846122b3565b949350505050565b600060e082019050612386600083018a611d55565b81810360208301526123988189611d64565b905081810360408301526123ac8188611dc2565b905081810360608301526123c08187611dc2565b90506123cf6080830186611d55565b81810360a08301526123e18185611e55565b90506123f060c0830184611edd565b98975050505050505050565b60006040820190506124116000830185611d55565b61241e60208301846122b3565b9392505050565b600060608201905061243a6000830186611d55565b61244760208301856122b3565b6124546040830184611d55565b949350505050565b60006080820190506124716000830187611d55565b61247e60208301866122b3565b61248b6040830185611eec565b6124986060830184611d55565b95945050505050565b60006080820190506124b66000830187611d55565b6124c360208301866122b3565b6124d06040830185611efb565b6124dd6060830184611d55565b95945050505050565b60006020820190506124fb6000830184611e20565b92915050565b60006040820190506125166000830185611e2f565b6125236020830184611d55565b9392505050565b600060808201905061253f6000830187611e2f565b61254c60208301866122c2565b6125596040830185611e2f565b6125666060830184611e2f565b95945050505050565b60006020820190506125846000830184611ebf565b92915050565b600060208201905061259f6000830184611ece565b92915050565b600060208201905081810360008301526125be81611f4a565b9050919050565b600060208201905081810360008301526125de81611f8a565b9050919050565b600060208201905081810360008301526125fe81611ff0565b9050919050565b6000602082019050818103600083015261261e81612030565b9050919050565b6000602082019050818103600083015261263e81612070565b9050919050565b6000602082019050818103600083015261265e816120b0565b9050919050565b6000602082019050818103600083015261267e81612116565b9050919050565b6000602082019050818103600083015261269e8161217c565b9050919050565b600060208201905081810360008301526126be816121bc565b9050919050565b600060208201905081810360008301526126de816121fc565b9050919050565b600060c0820190506126fa600083018561223c565b81810360a083015261270c8184611e55565b90509392505050565b600060208201905061272a60008301846122b3565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561275357600080fd5b8060405250919050565b600067ffffffffffffffff82111561277457600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b6000612849826128a2565b9050919050565b600061285b826128a2565b9050919050565b60008115159050919050565b6000819050919050565b60006fffffffffffffffffffffffffffffffff82169050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600064ffffffffff82169050919050565b600060ff82169050919050565b60006128f5826128fc565b9050919050565b6000612907826128a2565b9050919050565b600061291982612920565b9050919050565b600061292b826128a2565b9050919050565b600061293d82612894565b9050919050565b600061294f826128c2565b9050919050565b6000612961826128c2565b9050919050565b82818337600083830152505050565b60005b8381101561299557808201518184015260208101905061297a565b838111156129a4576000848401525b50505050565b6000819050919050565b6000601f19601f8301169050919050565b6129ce8161283e565b81146129d957600080fd5b50565b6129e581612850565b81146129f057600080fd5b50565b6129fc81612862565b8114612a0757600080fd5b50565b612a1381612878565b8114612a1e57600080fd5b50565b612a2a816128c2565b8114612a3557600080fd5b50565b612a41816128cc565b8114612a4c57600080fd5b50565b612a58816128dd565b8114612a6357600080fd5b5056fea2646970667358221220f70aa900f1e2d589e06f3f8f60482bf5f9317c0099fdbb803527790abc0c3fbe64736f6c634300060c0033"

// DeployRepayment deploys a new Ethereum contract, binding an instance of Repayment to it.
func DeployRepayment(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Repayment, error) {
	parsed, err := abi.JSON(strings.NewReader(RepaymentABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(RepaymentBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Repayment{RepaymentCaller: RepaymentCaller{contract: contract}, RepaymentTransactor: RepaymentTransactor{contract: contract}, RepaymentFilterer: RepaymentFilterer{contract: contract}}, nil
}

// Repayment is an auto generated Go binding around an Ethereum contract.
type Repayment struct {
	RepaymentCaller     // Read-only binding to the contract
	RepaymentTransactor // Write-only binding to the contract
	RepaymentFilterer   // Log filterer for contract events
}

// RepaymentCaller is an auto generated read-only Go binding around an Ethereum contract.
type RepaymentCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RepaymentTransactor is an auto generated write-only Go binding around an Ethereum contract.
type RepaymentTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RepaymentFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type RepaymentFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RepaymentSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type RepaymentSession struct {
	Contract     *Repayment        // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// RepaymentCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type RepaymentCallerSession struct {
	Contract *RepaymentCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts    // Call options to use throughout this session
}

// RepaymentTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type RepaymentTransactorSession struct {
	Contract     *RepaymentTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts    // Transaction auth options to use throughout this session
}

// RepaymentRaw is an auto generated low-level Go binding around an Ethereum contract.
type RepaymentRaw struct {
	Contract *Repayment // Generic contract binding to access the raw methods on
}

// RepaymentCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type RepaymentCallerRaw struct {
	Contract *RepaymentCaller // Generic read-only contract binding to access the raw methods on
}

// RepaymentTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type RepaymentTransactorRaw struct {
	Contract *RepaymentTransactor // Generic write-only contract binding to access the raw methods on
}

// NewRepayment creates a new instance of Repayment, bound to a specific deployed contract.
func NewRepayment(address common.Address, backend bind.ContractBackend) (*Repayment, error) {
	contract, err := bindRepayment(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Repayment{RepaymentCaller: RepaymentCaller{contract: contract}, RepaymentTransactor: RepaymentTransactor{contract: contract}, RepaymentFilterer: RepaymentFilterer{contract: contract}}, nil
}

// NewRepaymentCaller creates a new read-only instance of Repayment, bound to a specific deployed contract.
func NewRepaymentCaller(address common.Address, caller bind.ContractCaller) (*RepaymentCaller, error) {
	contract, err := bindRepayment(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &RepaymentCaller{contract: contract}, nil
}

// NewRepaymentTransactor creates a new write-only instance of Repayment, bound to a specific deployed contract.
func NewRepaymentTransactor(address common.Address, transactor bind.ContractTransactor) (*RepaymentTransactor, error) {
	contract, err := bindRepayment(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &RepaymentTransactor{contract: contract}, nil
}

// NewRepaymentFilterer creates a new log filterer instance of Repayment, bound to a specific deployed contract.
func NewRepaymentFilterer(address common.Address, filterer bind.ContractFilterer) (*RepaymentFilterer, error) {
	contract, err := bindRepayment(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &RepaymentFilterer{contract: contract}, nil
}

// bindRepayment binds a generic wrapper to an already deployed contract.
func bindRepayment(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(RepaymentABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Repayment *RepaymentRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Repayment.Contract.RepaymentCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Repayment *RepaymentRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Repayment.Contract.RepaymentTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Repayment *RepaymentRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Repayment.Contract.RepaymentTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Repayment *RepaymentCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Repayment.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Repayment *RepaymentTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Repayment.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Repayment *RepaymentTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Repayment.Contract.contract.Transact(opts, method, params...)
}

// ADDRESSESPROVIDER is a free data retrieval call binding the contract method 0x0542975c.
//
// Solidity: function ADDRESSES_PROVIDER() view returns(address)
func (_Repayment *RepaymentCaller) ADDRESSESPROVIDER(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Repayment.contract.Call(opts, &out, "ADDRESSES_PROVIDER")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// ADDRESSESPROVIDER is a free data retrieval call binding the contract method 0x0542975c.
//
// Solidity: function ADDRESSES_PROVIDER() view returns(address)
func (_Repayment *RepaymentSession) ADDRESSESPROVIDER() (common.Address, error) {
	return _Repayment.Contract.ADDRESSESPROVIDER(&_Repayment.CallOpts)
}

// ADDRESSESPROVIDER is a free data retrieval call binding the contract method 0x0542975c.
//
// Solidity: function ADDRESSES_PROVIDER() view returns(address)
func (_Repayment *RepaymentCallerSession) ADDRESSESPROVIDER() (common.Address, error) {
	return _Repayment.Contract.ADDRESSESPROVIDER(&_Repayment.CallOpts)
}

// LENDINGPOOL is a free data retrieval call binding the contract method 0xb4dcfc77.
//
// Solidity: function LENDING_POOL() view returns(address)
func (_Repayment *RepaymentCaller) LENDINGPOOL(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Repayment.contract.Call(opts, &out, "LENDING_POOL")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// LENDINGPOOL is a free data retrieval call binding the contract method 0xb4dcfc77.
//
// Solidity: function LENDING_POOL() view returns(address)
func (_Repayment *RepaymentSession) LENDINGPOOL() (common.Address, error) {
	return _Repayment.Contract.LENDINGPOOL(&_Repayment.CallOpts)
}

// LENDINGPOOL is a free data retrieval call binding the contract method 0xb4dcfc77.
//
// Solidity: function LENDING_POOL() view returns(address)
func (_Repayment *RepaymentCallerSession) LENDINGPOOL() (common.Address, error) {
	return _Repayment.Contract.LENDINGPOOL(&_Repayment.CallOpts)
}

// Execute is a paid mutator transaction binding the contract method 0xf1742a61.
//
// Solidity: function execute(address _user, bytes _signature, address _cAsset, address _dAsset, bytes _oneInchSwapCalldata) returns()
func (_Repayment *RepaymentTransactor) Execute(opts *bind.TransactOpts, _user common.Address, _signature []byte, _cAsset common.Address, _dAsset common.Address, _oneInchSwapCalldata []byte) (*types.Transaction, error) {
	return _Repayment.contract.Transact(opts, "execute", _user, _signature, _cAsset, _dAsset, _oneInchSwapCalldata)
}

// Execute is a paid mutator transaction binding the contract method 0xf1742a61.
//
// Solidity: function execute(address _user, bytes _signature, address _cAsset, address _dAsset, bytes _oneInchSwapCalldata) returns()
func (_Repayment *RepaymentSession) Execute(_user common.Address, _signature []byte, _cAsset common.Address, _dAsset common.Address, _oneInchSwapCalldata []byte) (*types.Transaction, error) {
	return _Repayment.Contract.Execute(&_Repayment.TransactOpts, _user, _signature, _cAsset, _dAsset, _oneInchSwapCalldata)
}

// Execute is a paid mutator transaction binding the contract method 0xf1742a61.
//
// Solidity: function execute(address _user, bytes _signature, address _cAsset, address _dAsset, bytes _oneInchSwapCalldata) returns()
func (_Repayment *RepaymentTransactorSession) Execute(_user common.Address, _signature []byte, _cAsset common.Address, _dAsset common.Address, _oneInchSwapCalldata []byte) (*types.Transaction, error) {
	return _Repayment.Contract.Execute(&_Repayment.TransactOpts, _user, _signature, _cAsset, _dAsset, _oneInchSwapCalldata)
}

// ExecuteOperation is a paid mutator transaction binding the contract method 0x920f5c84.
//
// Solidity: function executeOperation(address[] , uint256[] _amounts, uint256[] _premiums, address , bytes _params) returns(bool)
func (_Repayment *RepaymentTransactor) ExecuteOperation(opts *bind.TransactOpts, arg0 []common.Address, _amounts []*big.Int, _premiums []*big.Int, arg3 common.Address, _params []byte) (*types.Transaction, error) {
	return _Repayment.contract.Transact(opts, "executeOperation", arg0, _amounts, _premiums, arg3, _params)
}

// ExecuteOperation is a paid mutator transaction binding the contract method 0x920f5c84.
//
// Solidity: function executeOperation(address[] , uint256[] _amounts, uint256[] _premiums, address , bytes _params) returns(bool)
func (_Repayment *RepaymentSession) ExecuteOperation(arg0 []common.Address, _amounts []*big.Int, _premiums []*big.Int, arg3 common.Address, _params []byte) (*types.Transaction, error) {
	return _Repayment.Contract.ExecuteOperation(&_Repayment.TransactOpts, arg0, _amounts, _premiums, arg3, _params)
}

// ExecuteOperation is a paid mutator transaction binding the contract method 0x920f5c84.
//
// Solidity: function executeOperation(address[] , uint256[] _amounts, uint256[] _premiums, address , bytes _params) returns(bool)
func (_Repayment *RepaymentTransactorSession) ExecuteOperation(arg0 []common.Address, _amounts []*big.Int, _premiums []*big.Int, arg3 common.Address, _params []byte) (*types.Transaction, error) {
	return _Repayment.Contract.ExecuteOperation(&_Repayment.TransactOpts, arg0, _amounts, _premiums, arg3, _params)
}

// OneInchSwap is a paid mutator transaction binding the contract method 0x282fe23e.
//
// Solidity: function oneInchSwap(address _aToken, bytes _oneInchSwapCalldata) returns(uint256)
func (_Repayment *RepaymentTransactor) OneInchSwap(opts *bind.TransactOpts, _aToken common.Address, _oneInchSwapCalldata []byte) (*types.Transaction, error) {
	return _Repayment.contract.Transact(opts, "oneInchSwap", _aToken, _oneInchSwapCalldata)
}

// OneInchSwap is a paid mutator transaction binding the contract method 0x282fe23e.
//
// Solidity: function oneInchSwap(address _aToken, bytes _oneInchSwapCalldata) returns(uint256)
func (_Repayment *RepaymentSession) OneInchSwap(_aToken common.Address, _oneInchSwapCalldata []byte) (*types.Transaction, error) {
	return _Repayment.Contract.OneInchSwap(&_Repayment.TransactOpts, _aToken, _oneInchSwapCalldata)
}

// OneInchSwap is a paid mutator transaction binding the contract method 0x282fe23e.
//
// Solidity: function oneInchSwap(address _aToken, bytes _oneInchSwapCalldata) returns(uint256)
func (_Repayment *RepaymentTransactorSession) OneInchSwap(_aToken common.Address, _oneInchSwapCalldata []byte) (*types.Transaction, error) {
	return _Repayment.Contract.OneInchSwap(&_Repayment.TransactOpts, _aToken, _oneInchSwapCalldata)
}

// UnderlyingAsset is a paid mutator transaction binding the contract method 0xa64b5b8a.
//
// Solidity: function underlyingAsset(address _aToken) returns(address)
func (_Repayment *RepaymentTransactor) UnderlyingAsset(opts *bind.TransactOpts, _aToken common.Address) (*types.Transaction, error) {
	return _Repayment.contract.Transact(opts, "underlyingAsset", _aToken)
}

// UnderlyingAsset is a paid mutator transaction binding the contract method 0xa64b5b8a.
//
// Solidity: function underlyingAsset(address _aToken) returns(address)
func (_Repayment *RepaymentSession) UnderlyingAsset(_aToken common.Address) (*types.Transaction, error) {
	return _Repayment.Contract.UnderlyingAsset(&_Repayment.TransactOpts, _aToken)
}

// UnderlyingAsset is a paid mutator transaction binding the contract method 0xa64b5b8a.
//
// Solidity: function underlyingAsset(address _aToken) returns(address)
func (_Repayment *RepaymentTransactorSession) UnderlyingAsset(_aToken common.Address) (*types.Transaction, error) {
	return _Repayment.Contract.UnderlyingAsset(&_Repayment.TransactOpts, _aToken)
}

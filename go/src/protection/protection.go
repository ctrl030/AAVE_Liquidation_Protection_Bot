// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package protection

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// ProtectionABI is the input ABI used to generate the binding from.
const ProtectionABI = "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"repaid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"redeemed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"swappedTo\",\"type\":\"uint256\"}],\"name\":\"ProtectionExercised\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"aToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"debtAsset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"triggerRatio\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasValue\",\"type\":\"uint256\"}],\"name\":\"ProtectionRegistered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADDRESSES_PROVIDER\",\"outputs\":[{\"internalType\":\"contractILendingPoolAddressesProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BOT\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LENDING_POOL\",\"outputs\":[{\"internalType\":\"contractILendingPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_oneInchSwapCalldata\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_premiums\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_params\",\"type\":\"bytes\"}],\"name\":\"executeOperation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_aToken\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_oneInchSwapCalldata\",\"type\":\"bytes\"}],\"name\":\"oneInchSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"protections\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"aToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"debtAsset\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"triggerRatio\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateral\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_debt\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_triggerRatio\",\"type\":\"uint16\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_aToken\",\"type\":\"address\"}],\"name\":\"underlyingAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]"

// ProtectionBin is the compiled bytecode used for deploying new contracts.
var ProtectionBin = "0x60e060405234801561001057600080fd5b503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505073b53c1a33016b2dc2ff3653530bff1848a515c8c573ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b81525050737d2768de32b0b80b7a3454c06bdac94a69ddc7a973ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1660601b8152505060805160601c60a05160601c60c05160601c6136466101456000398061091752806109e75280610cab528061116b5280611374528061169d528061197f5280611aea5280611c9d52508061024952508061026d528061074a5280610cef52506136466000f3fe6080604052600436106100865760003560e01c8063613e3fc011610059578063613e3fc014610147578063920f5c8414610186578063a64b5b8a146101c3578063b4dcfc7714610200578063bbc841ac1461022b57610086565b80630542975c1461008b5780631cff79cd146100b6578063282fe23e146100df578063486277f61461011c575b600080fd5b34801561009757600080fd5b506100a0610247565b6040516100ad9190613063565b60405180910390f35b3480156100c257600080fd5b506100dd60048036038101906100d89190612493565b61026b565b005b3480156100eb57600080fd5b5061010660048036038101906101019190612493565b610595565b6040516101139190613269565b60405180910390f35b34801561012857600080fd5b50610131610748565b60405161013e9190612d89565b60405180910390f35b34801561015357600080fd5b5061016e600480360381019061016991906123f2565b61076c565b60405161017d93929190612e20565b60405180910390f35b34801561019257600080fd5b506101ad60048036038101906101a891906124e7565b6107e4565b6040516101ba9190613048565b60405180910390f35b3480156101cf57600080fd5b506101ea60048036038101906101e591906123f2565b610b59565b6040516101f79190612d53565b60405180910390f35b34801561020c57600080fd5b50610215610ca9565b604051610222919061307e565b60405180910390f35b61024560048036038101906102409190612444565b610ccd565b005b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102c357600080fd5b6102cb611d5d565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900461ffff1661ffff1661ffff168152505090506000806103f3836020015186610ed6565b9150915060008183011161043c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043390613219565b60405180910390fd5b610444611dae565b6040518060a001604052808773ffffffffffffffffffffffffffffffffffffffff168152602001856000015173ffffffffffffffffffffffffffffffffffffffff168152602001856020015173ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381525090506104e9846020015183850183886040516020016104d5929190613239565b604051602081830303815290604052611008565b6000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160146101000a81549061ffff02191690555050505050505050565b6000806105a184610b59565b90508073ffffffffffffffffffffffffffffffffffffffff1663095ea7b373111111125434b319222cdbf8c261674adb56f3ae7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b8152600401610612929190612f19565b602060405180830381600087803b15801561062c57600080fd5b505af1158015610640573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106649190612610565b506000606073111111125434b319222cdbf8c261674adb56f3ae73ffffffffffffffffffffffffffffffffffffffff16856040516106a29190612d3c565b6000604051808303816000865af19150503d80600081146106df576040519150601f19603f3d011682016040523d82523d6000602084013e6106e4565b606091505b509150915081610729576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610720906130f9565b60405180910390fd5b8080602001905181019061073d91906126e0565b935050505092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900461ffff16905083565b60006107ee611dae565b606084848101906107ff9190612639565b91509150816040015173ffffffffffffffffffffffffffffffffffffffff1663095ea7b3737d2768de32b0b80b7a3454c06bdac94a69ddc7a97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b8152600401610876929190612f19565b602060405180830381600087803b15801561089057600080fd5b505af11580156108a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c89190612610565b610907576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fe906131b9565b60405180910390fd5b600080836060015111156109d8577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663573ade8184604001518560600151600187600001516040518563ffffffff1660e01b81526004016109819493929190612f79565b602060405180830381600087803b15801561099b57600080fd5b505af11580156109af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d391906126e0565b810190505b600083608001511115610aa8577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663573ade8184604001518560800151600287600001516040518563ffffffff1660e01b8152600401610a519493929190612fbe565b602060405180830381600087803b158015610a6b57600080fd5b505af1158015610a7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa391906126e0565b810190505b6000610abc84600001518560200151611209565b90506000610ace856020015185610595565b9050610b02858c8c6000818110610ae157fe5b905060200201358f8f6000818110610af557fe5b905060200201350161144b565b7f014a2a1b5d23b7bad4c57385eeb802287329d12c66122c4297e435883dce551d8560000151848484604051610b3b9493929190613003565b60405180910390a16001955050505050509998505050505050505050565b60008060608373ffffffffffffffffffffffffffffffffffffffff166040516024016040516020818303038152906040527fb16a19de000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610c059190612d3c565b6000604051808303816000865af19150503d8060008114610c42576040519150601f19603f3d011682016040523d82523d6000602084013e610c47565b606091505b509150915081610c8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8390613119565b60405180910390fd5b80806020019051810190610ca0919061241b565b92505050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b610cd78383611699565b6000610ce284611ade565b9050610ced81611ba1565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610d53573d6000803e3d6000fd5b5060405180606001604052808273ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018361ffff168152506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548161ffff021916908361ffff1602179055509050507f4fc627d8f454b5a4c0a2e170a04bbd06dc16139c80c03e0e0ed6a49b1ae79b6f3382858534604051610ec8959493929190612dcd565b60405180910390a150505050565b600080600080610ee586611c90565b915091508173ffffffffffffffffffffffffffffffffffffffff166370a08231866040518263ffffffff1660e01b8152600401610f229190612d53565b60206040518083038186803b158015610f3a57600080fd5b505afa158015610f4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7291906126e0565b8173ffffffffffffffffffffffffffffffffffffffff166370a08231876040518263ffffffff1660e01b8152600401610fab9190612d53565b60206040518083038186803b158015610fc357600080fd5b505afa158015610fd7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ffb91906126e0565b9350935050509250929050565b6060600167ffffffffffffffff8111801561102257600080fd5b506040519080825280602002602001820160405280156110515781602001602082028036833780820191505090505b509050838160008151811061106257fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506060600167ffffffffffffffff811180156110b657600080fd5b506040519080825280602002602001820160405280156110e55781602001602082028036833780820191505090505b50905083816000815181106110f657fe5b6020026020010181815250506060600167ffffffffffffffff8111801561111c57600080fd5b5060405190808252806020026020018201604052801561114b5781602001602082028036833780820191505090505b50905060008160008151811061115d57fe5b6020026020010181815250507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ab9c4b5d30858585308a60006040518863ffffffff1660e01b81526004016111cf9796959493929190612e8e565b600060405180830381600087803b1580156111e957600080fd5b505af11580156111fd573d6000803e3d6000fd5b50505050505050505050565b6000808273ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b81526004016112459190612d53565b60206040518083038186803b15801561125d57600080fd5b505afa158015611271573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129591906126e0565b90508273ffffffffffffffffffffffffffffffffffffffff166323b872dd8530846040518463ffffffff1660e01b81526004016112d493929190612e57565b602060405180830381600087803b1580156112ee57600080fd5b505af1158015611302573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113269190612610565b611365576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161135c90613179565b60405180910390fd5b600061137084610b59565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166369328dec827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff306040518463ffffffff1660e01b81526004016113ef93929190612f42565b602060405180830381600087803b15801561140957600080fd5b505af115801561141d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061144191906126e0565b9250505092915050565b6000826040015190508073ffffffffffffffffffffffffffffffffffffffff1663095ea7b3737d2768de32b0b80b7a3454c06bdac94a69ddc7a9846040518363ffffffff1660e01b81526004016114a3929190612f19565b602060405180830381600087803b1580156114bd57600080fd5b505af11580156114d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114f59190612610565b611534576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161152b906130d9565b60405180910390fd5b6000828273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016115709190612d53565b60206040518083038186803b15801561158857600080fd5b505afa15801561159c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115c091906126e0565b0390508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8560000151836040518363ffffffff1660e01b8152600401611602929190612f19565b602060405180830381600087803b15801561161c57600080fd5b505af1158015611630573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116549190612610565b611693576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161168a90613199565b60405180910390fd5b50505050565b60607f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d1946dbc6040518163ffffffff1660e01b815260040160006040518083038186803b15801561170157600080fd5b505afa158015611715573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061173e91906125cf565b9050600081519050617fff60010b811061178d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161178490613099565b60405180910390fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff905060007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff905060005b838110156118a35760008360010b12801561183357508481815181106117fc57fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16145b1561183c578092505b60008260010b12801561188d575084818151811061185657fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16145b15611896578091505b80806001019150506117da565b5060008260010b12156118eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118e290613139565b60405180910390fd5b60008160010b1215611932576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161192990613219565b60405180910390fd5b8060010b8260010b141561197b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161197290613159565b60405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16634417a583336040518263ffffffff1660e01b81526004016119d69190612d6e565b60206040518083038186803b1580156119ee57600080fd5b505afa158015611a02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a2691906126b7565b600001519050600060018460010b6002020160020a90508081831614611a81576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a78906131d9565b60405180910390fd5b60008360010b60020260020a90508081841614611ad3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611aca906130b9565b60405180910390fd5b505050505050505050565b6000611ae8611e1f565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166335ea6a75846040518263ffffffff1660e01b8152600401611b419190612d53565b6101806040518083038186803b158015611b5a57600080fd5b505afa158015611b6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b92919061268d565b90508060e00151915050919050565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401611bfd929190612da4565b60206040518083038186803b158015611c1557600080fd5b505afa158015611c29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c4d91906126e0565b14611c8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c84906131f9565b60405180910390fd5b50565b600080611c9b611e1f565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166335ea6a75856040518263ffffffff1660e01b8152600401611cf49190612d53565b6101806040518083038186803b158015611d0d57600080fd5b505afa158015611d21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d45919061268d565b90508061010001518161012001519250925050915091565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600061ffff1681525090565b6040518060a00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b604051806101800160405280611e33611f42565b815260200160006fffffffffffffffffffffffffffffffff16815260200160006fffffffffffffffffffffffffffffffff16815260200160006fffffffffffffffffffffffffffffffff16815260200160006fffffffffffffffffffffffffffffffff16815260200160006fffffffffffffffffffffffffffffffff168152602001600064ffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600060ff1681525090565b6040518060200160405280600081525090565b600081359050611f6481613558565b92915050565b600081519050611f7981613558565b92915050565b600081519050611f8e8161356f565b92915050565b60008083601f840112611fa657600080fd5b8235905067ffffffffffffffff811115611fbf57600080fd5b602083019150836020820283011115611fd757600080fd5b9250929050565b600082601f830112611fef57600080fd5b8151612002611ffd826132b1565b613284565b9150818183526020840193506020810190508385602084028201111561202757600080fd5b60005b83811015612057578161203d8882611f6a565b84526020840193506020830192505060018101905061202a565b5050505092915050565b60008083601f84011261207357600080fd5b8235905067ffffffffffffffff81111561208c57600080fd5b6020830191508360208202830111156120a457600080fd5b9250929050565b6000815190506120ba81613586565b92915050565b60008083601f8401126120d257600080fd5b8235905067ffffffffffffffff8111156120eb57600080fd5b60208301915083600182028301111561210357600080fd5b9250929050565b600082601f83011261211b57600080fd5b813561212e612129826132d9565b613284565b9150808252602083016020830185838301111561214a57600080fd5b612155838284613505565b50505092915050565b600060a0828403121561217057600080fd5b61217a60a0613284565b9050600061218a84828501611f55565b600083015250602061219e84828501611f55565b60208301525060406121b284828501611f55565b60408301525060606121c68482850161239e565b60608301525060806121da8482850161239e565b60808301525092915050565b6000602082840312156121f857600080fd5b6122026020613284565b90506000612212848285016123b3565b60008301525092915050565b6000610180828403121561223157600080fd5b61223c610180613284565b9050600061224c848285016121e6565b600083015250602061226084828501612374565b602083015250604061227484828501612374565b604083015250606061228884828501612374565b606083015250608061229c84828501612374565b60808301525060a06122b084828501612374565b60a08301525060c06122c4848285016123c8565b60c08301525060e06122d884828501611f6a565b60e0830152506101006122ed84828501611f6a565b6101008301525061012061230384828501611f6a565b6101208301525061014061231984828501611f6a565b6101408301525061016061232f848285016123dd565b6101608301525092915050565b60006020828403121561234e57600080fd5b6123586020613284565b90506000612368848285016123b3565b60008301525092915050565b6000815190506123838161359d565b92915050565b600081359050612398816135b4565b92915050565b6000813590506123ad816135cb565b92915050565b6000815190506123c2816135cb565b92915050565b6000815190506123d7816135e2565b92915050565b6000815190506123ec816135f9565b92915050565b60006020828403121561240457600080fd5b600061241284828501611f55565b91505092915050565b60006020828403121561242d57600080fd5b600061243b84828501611f7f565b91505092915050565b60008060006060848603121561245957600080fd5b600061246786828701611f55565b935050602061247886828701611f55565b925050604061248986828701612389565b9150509250925092565b600080604083850312156124a657600080fd5b60006124b485828601611f55565b925050602083013567ffffffffffffffff8111156124d157600080fd5b6124dd8582860161210a565b9150509250929050565b600080600080600080600080600060a08a8c03121561250557600080fd5b60008a013567ffffffffffffffff81111561251f57600080fd5b61252b8c828d01611f94565b995099505060208a013567ffffffffffffffff81111561254a57600080fd5b6125568c828d01612061565b975097505060408a013567ffffffffffffffff81111561257557600080fd5b6125818c828d01612061565b955095505060606125948c828d01611f55565b93505060808a013567ffffffffffffffff8111156125b157600080fd5b6125bd8c828d016120c0565b92509250509295985092959850929598565b6000602082840312156125e157600080fd5b600082015167ffffffffffffffff8111156125fb57600080fd5b61260784828501611fde565b91505092915050565b60006020828403121561262257600080fd5b6000612630848285016120ab565b91505092915050565b60008060c0838503121561264c57600080fd5b600061265a8582860161215e565b92505060a083013567ffffffffffffffff81111561267757600080fd5b6126838582860161210a565b9150509250929050565b600061018082840312156126a057600080fd5b60006126ae8482850161221e565b91505092915050565b6000602082840312156126c957600080fd5b60006126d78482850161233c565b91505092915050565b6000602082840312156126f257600080fd5b6000612700848285016123b3565b91505092915050565b60006127158383612757565b60208301905092915050565b600061272d8383612d1e565b60208301905092915050565b61274281613451565b82525050565b612751816133c1565b82525050565b612760816133af565b82525050565b61276f816133af565b82525050565b600061278082613325565b61278a8185613360565b935061279583613305565b8060005b838110156127c65781516127ad8882612709565b97506127b883613346565b925050600181019050612799565b5085935050505092915050565b60006127de82613330565b6127e88185613371565b93506127f383613315565b8060005b8381101561282457815161280b8882612721565b975061281683613353565b9250506001810190506127f7565b5085935050505092915050565b61283a816133d3565b82525050565b600061284b8261333b565b6128558185613382565b9350612865818560208601613514565b61286e81613547565b840191505092915050565b60006128848261333b565b61288e8185613393565b935061289e818560208601613514565b80840191505092915050565b6128b381613463565b82525050565b6128c281613487565b82525050565b6128d1816134ab565b82525050565b6128e0816134bd565b82525050565b6128ef816134cf565b82525050565b600061290260158361339e565b91507f72657365727665206c69737420746f6f206c6f6e6700000000000000000000006000830152602082019050919050565b600061294260188361339e565b91507f77726f6e67206465627420636f6e66696775726174696f6e00000000000000006000830152602082019050919050565b600061298260268361339e565b91507f6661696c656420746f20617070726f766520666c617368206c6f616e2072657060008301527f61796d656e7400000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006129e860148361339e565b91507f6f6e6520696e63682073776170206661696c65640000000000000000000000006000830152602082019050919050565b6000612a28601e8361339e565b91507f6661696c656420746f2067657420756e6465726c79696e6720617373657400006000830152602082019050919050565b6000612a6860148361339e565b91507f636f6c6c61746572616c206e6f7420666f756e640000000000000000000000006000830152602082019050919050565b6000612aa860208361339e565b91507f636f6c6c61746572616c206d757374206469666665722066726f6d20646562746000830152602082019050919050565b6000612ae8601a8361339e565b91507f636f6c6c61746572616c207472616e73666572206661696c65640000000000006000830152602082019050919050565b6000612b2860258361339e565b91507f7472616e7366657272696e672072656d61696e64657220746f2075736572206660008301527f61696c65640000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612b8e60228361339e565b91507f6661696c656420746f20617070726f766520746865206c656e64696e6720706f60008301527f6f6c0000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612bf4601e8361339e565b91507f77726f6e6720636f6c6c61746572616c20636f6e66696775726174696f6e00006000830152602082019050919050565b6000612c3460198361339e565b91507f696e636f727265637420616c6c6f77616e63652076616c7565000000000000006000830152602082019050919050565b6000612c74600e8361339e565b91507f64656274206e6f7420666f756e640000000000000000000000000000000000006000830152602082019050919050565b60a082016000820151612cbd6000850182612757565b506020820151612cd06020850182612757565b506040820151612ce36040850182612757565b506060820151612cf66060850182612d1e565b506080820151612d096080850182612d1e565b50505050565b612d18816133fb565b82525050565b612d2781613429565b82525050565b612d3681613429565b82525050565b6000612d488284612879565b915081905092915050565b6000602082019050612d686000830184612766565b92915050565b6000602082019050612d836000830184612739565b92915050565b6000602082019050612d9e6000830184612748565b92915050565b6000604082019050612db96000830185612739565b612dc66020830184612766565b9392505050565b600060a082019050612de26000830188612739565b612def6020830187612766565b612dfc6040830186612766565b612e096060830185612d0f565b612e166080830184612d2d565b9695505050505050565b6000606082019050612e356000830186612766565b612e426020830185612766565b612e4f6040830184612d0f565b949350505050565b6000606082019050612e6c6000830186612766565b612e796020830185612766565b612e866040830184612d2d565b949350505050565b600060e082019050612ea3600083018a612766565b8181036020830152612eb58189612775565b90508181036040830152612ec981886127d3565b90508181036060830152612edd81876127d3565b9050612eec6080830186612766565b81810360a0830152612efe8185612840565b9050612f0d60c08301846128c8565b98975050505050505050565b6000604082019050612f2e6000830185612766565b612f3b6020830184612d2d565b9392505050565b6000606082019050612f576000830186612766565b612f646020830185612d2d565b612f716040830184612766565b949350505050565b6000608082019050612f8e6000830187612766565b612f9b6020830186612d2d565b612fa860408301856128d7565b612fb56060830184612766565b95945050505050565b6000608082019050612fd36000830187612766565b612fe06020830186612d2d565b612fed60408301856128e6565b612ffa6060830184612766565b95945050505050565b60006080820190506130186000830187612766565b6130256020830186612d2d565b6130326040830185612d2d565b61303f6060830184612d2d565b95945050505050565b600060208201905061305d6000830184612831565b92915050565b600060208201905061307860008301846128aa565b92915050565b600060208201905061309360008301846128b9565b92915050565b600060208201905081810360008301526130b2816128f5565b9050919050565b600060208201905081810360008301526130d281612935565b9050919050565b600060208201905081810360008301526130f281612975565b9050919050565b60006020820190508181036000830152613112816129db565b9050919050565b6000602082019050818103600083015261313281612a1b565b9050919050565b6000602082019050818103600083015261315281612a5b565b9050919050565b6000602082019050818103600083015261317281612a9b565b9050919050565b6000602082019050818103600083015261319281612adb565b9050919050565b600060208201905081810360008301526131b281612b1b565b9050919050565b600060208201905081810360008301526131d281612b81565b9050919050565b600060208201905081810360008301526131f281612be7565b9050919050565b6000602082019050818103600083015261321281612c27565b9050919050565b6000602082019050818103600083015261323281612c67565b9050919050565b600060c08201905061324e6000830185612ca7565b81810360a08301526132608184612840565b90509392505050565b600060208201905061327e6000830184612d2d565b92915050565b6000604051905081810181811067ffffffffffffffff821117156132a757600080fd5b8060405250919050565b600067ffffffffffffffff8211156132c857600080fd5b602082029050602081019050919050565b600067ffffffffffffffff8211156132f057600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b60006133ba82613409565b9050919050565b60006133cc82613409565b9050919050565b60008115159050919050565b60006fffffffffffffffffffffffffffffffff82169050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600064ffffffffff82169050919050565b600060ff82169050919050565b600061345c826134e1565b9050919050565b600061346e82613475565b9050919050565b600061348082613409565b9050919050565b600061349282613499565b9050919050565b60006134a482613409565b9050919050565b60006134b6826133fb565b9050919050565b60006134c882613429565b9050919050565b60006134da82613429565b9050919050565b60006134ec826134f3565b9050919050565b60006134fe82613409565b9050919050565b82818337600083830152505050565b60005b83811015613532578082015181840152602081019050613517565b83811115613541576000848401525b50505050565b6000601f19601f8301169050919050565b613561816133af565b811461356c57600080fd5b50565b613578816133c1565b811461358357600080fd5b50565b61358f816133d3565b811461359a57600080fd5b50565b6135a6816133df565b81146135b157600080fd5b50565b6135bd816133fb565b81146135c857600080fd5b50565b6135d481613429565b81146135df57600080fd5b50565b6135eb81613433565b81146135f657600080fd5b50565b61360281613444565b811461360d57600080fd5b5056fea2646970667358221220a4be8a8be9aa0c58d62d697e59190fc71a0af248f58c0f3c958b5bb26925934564736f6c634300060c0033"

// DeployProtection deploys a new Ethereum contract, binding an instance of Protection to it.
func DeployProtection(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Protection, error) {
	parsed, err := abi.JSON(strings.NewReader(ProtectionABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(ProtectionBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Protection{ProtectionCaller: ProtectionCaller{contract: contract}, ProtectionTransactor: ProtectionTransactor{contract: contract}, ProtectionFilterer: ProtectionFilterer{contract: contract}}, nil
}

// Protection is an auto generated Go binding around an Ethereum contract.
type Protection struct {
	ProtectionCaller     // Read-only binding to the contract
	ProtectionTransactor // Write-only binding to the contract
	ProtectionFilterer   // Log filterer for contract events
}

// ProtectionCaller is an auto generated read-only Go binding around an Ethereum contract.
type ProtectionCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ProtectionTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ProtectionTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ProtectionFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ProtectionFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ProtectionSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ProtectionSession struct {
	Contract     *Protection       // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ProtectionCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ProtectionCallerSession struct {
	Contract *ProtectionCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts     // Call options to use throughout this session
}

// ProtectionTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ProtectionTransactorSession struct {
	Contract     *ProtectionTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts     // Transaction auth options to use throughout this session
}

// ProtectionRaw is an auto generated low-level Go binding around an Ethereum contract.
type ProtectionRaw struct {
	Contract *Protection // Generic contract binding to access the raw methods on
}

// ProtectionCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ProtectionCallerRaw struct {
	Contract *ProtectionCaller // Generic read-only contract binding to access the raw methods on
}

// ProtectionTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ProtectionTransactorRaw struct {
	Contract *ProtectionTransactor // Generic write-only contract binding to access the raw methods on
}

// NewProtection creates a new instance of Protection, bound to a specific deployed contract.
func NewProtection(address common.Address, backend bind.ContractBackend) (*Protection, error) {
	contract, err := bindProtection(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Protection{ProtectionCaller: ProtectionCaller{contract: contract}, ProtectionTransactor: ProtectionTransactor{contract: contract}, ProtectionFilterer: ProtectionFilterer{contract: contract}}, nil
}

// NewProtectionCaller creates a new read-only instance of Protection, bound to a specific deployed contract.
func NewProtectionCaller(address common.Address, caller bind.ContractCaller) (*ProtectionCaller, error) {
	contract, err := bindProtection(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ProtectionCaller{contract: contract}, nil
}

// NewProtectionTransactor creates a new write-only instance of Protection, bound to a specific deployed contract.
func NewProtectionTransactor(address common.Address, transactor bind.ContractTransactor) (*ProtectionTransactor, error) {
	contract, err := bindProtection(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ProtectionTransactor{contract: contract}, nil
}

// NewProtectionFilterer creates a new log filterer instance of Protection, bound to a specific deployed contract.
func NewProtectionFilterer(address common.Address, filterer bind.ContractFilterer) (*ProtectionFilterer, error) {
	contract, err := bindProtection(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ProtectionFilterer{contract: contract}, nil
}

// bindProtection binds a generic wrapper to an already deployed contract.
func bindProtection(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(ProtectionABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Protection *ProtectionRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Protection.Contract.ProtectionCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Protection *ProtectionRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Protection.Contract.ProtectionTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Protection *ProtectionRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Protection.Contract.ProtectionTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Protection *ProtectionCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Protection.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Protection *ProtectionTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Protection.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Protection *ProtectionTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Protection.Contract.contract.Transact(opts, method, params...)
}

// ADDRESSESPROVIDER is a free data retrieval call binding the contract method 0x0542975c.
//
// Solidity: function ADDRESSES_PROVIDER() view returns(address)
func (_Protection *ProtectionCaller) ADDRESSESPROVIDER(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Protection.contract.Call(opts, &out, "ADDRESSES_PROVIDER")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// ADDRESSESPROVIDER is a free data retrieval call binding the contract method 0x0542975c.
//
// Solidity: function ADDRESSES_PROVIDER() view returns(address)
func (_Protection *ProtectionSession) ADDRESSESPROVIDER() (common.Address, error) {
	return _Protection.Contract.ADDRESSESPROVIDER(&_Protection.CallOpts)
}

// ADDRESSESPROVIDER is a free data retrieval call binding the contract method 0x0542975c.
//
// Solidity: function ADDRESSES_PROVIDER() view returns(address)
func (_Protection *ProtectionCallerSession) ADDRESSESPROVIDER() (common.Address, error) {
	return _Protection.Contract.ADDRESSESPROVIDER(&_Protection.CallOpts)
}

// BOT is a free data retrieval call binding the contract method 0x486277f6.
//
// Solidity: function BOT() view returns(address)
func (_Protection *ProtectionCaller) BOT(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Protection.contract.Call(opts, &out, "BOT")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// BOT is a free data retrieval call binding the contract method 0x486277f6.
//
// Solidity: function BOT() view returns(address)
func (_Protection *ProtectionSession) BOT() (common.Address, error) {
	return _Protection.Contract.BOT(&_Protection.CallOpts)
}

// BOT is a free data retrieval call binding the contract method 0x486277f6.
//
// Solidity: function BOT() view returns(address)
func (_Protection *ProtectionCallerSession) BOT() (common.Address, error) {
	return _Protection.Contract.BOT(&_Protection.CallOpts)
}

// LENDINGPOOL is a free data retrieval call binding the contract method 0xb4dcfc77.
//
// Solidity: function LENDING_POOL() view returns(address)
func (_Protection *ProtectionCaller) LENDINGPOOL(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Protection.contract.Call(opts, &out, "LENDING_POOL")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// LENDINGPOOL is a free data retrieval call binding the contract method 0xb4dcfc77.
//
// Solidity: function LENDING_POOL() view returns(address)
func (_Protection *ProtectionSession) LENDINGPOOL() (common.Address, error) {
	return _Protection.Contract.LENDINGPOOL(&_Protection.CallOpts)
}

// LENDINGPOOL is a free data retrieval call binding the contract method 0xb4dcfc77.
//
// Solidity: function LENDING_POOL() view returns(address)
func (_Protection *ProtectionCallerSession) LENDINGPOOL() (common.Address, error) {
	return _Protection.Contract.LENDINGPOOL(&_Protection.CallOpts)
}

// Protections is a free data retrieval call binding the contract method 0x613e3fc0.
//
// Solidity: function protections(address ) view returns(address aToken, address debtAsset, uint16 triggerRatio)
func (_Protection *ProtectionCaller) Protections(opts *bind.CallOpts, arg0 common.Address) (struct {
	AToken       common.Address
	DebtAsset    common.Address
	TriggerRatio uint16
}, error) {
	var out []interface{}
	err := _Protection.contract.Call(opts, &out, "protections", arg0)

	outstruct := new(struct {
		AToken       common.Address
		DebtAsset    common.Address
		TriggerRatio uint16
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.AToken = out[0].(common.Address)
	outstruct.DebtAsset = out[1].(common.Address)
	outstruct.TriggerRatio = out[2].(uint16)

	return *outstruct, err

}

// Protections is a free data retrieval call binding the contract method 0x613e3fc0.
//
// Solidity: function protections(address ) view returns(address aToken, address debtAsset, uint16 triggerRatio)
func (_Protection *ProtectionSession) Protections(arg0 common.Address) (struct {
	AToken       common.Address
	DebtAsset    common.Address
	TriggerRatio uint16
}, error) {
	return _Protection.Contract.Protections(&_Protection.CallOpts, arg0)
}

// Protections is a free data retrieval call binding the contract method 0x613e3fc0.
//
// Solidity: function protections(address ) view returns(address aToken, address debtAsset, uint16 triggerRatio)
func (_Protection *ProtectionCallerSession) Protections(arg0 common.Address) (struct {
	AToken       common.Address
	DebtAsset    common.Address
	TriggerRatio uint16
}, error) {
	return _Protection.Contract.Protections(&_Protection.CallOpts, arg0)
}

// Execute is a paid mutator transaction binding the contract method 0x1cff79cd.
//
// Solidity: function execute(address _user, bytes _oneInchSwapCalldata) returns()
func (_Protection *ProtectionTransactor) Execute(opts *bind.TransactOpts, _user common.Address, _oneInchSwapCalldata []byte) (*types.Transaction, error) {
	return _Protection.contract.Transact(opts, "execute", _user, _oneInchSwapCalldata)
}

// Execute is a paid mutator transaction binding the contract method 0x1cff79cd.
//
// Solidity: function execute(address _user, bytes _oneInchSwapCalldata) returns()
func (_Protection *ProtectionSession) Execute(_user common.Address, _oneInchSwapCalldata []byte) (*types.Transaction, error) {
	return _Protection.Contract.Execute(&_Protection.TransactOpts, _user, _oneInchSwapCalldata)
}

// Execute is a paid mutator transaction binding the contract method 0x1cff79cd.
//
// Solidity: function execute(address _user, bytes _oneInchSwapCalldata) returns()
func (_Protection *ProtectionTransactorSession) Execute(_user common.Address, _oneInchSwapCalldata []byte) (*types.Transaction, error) {
	return _Protection.Contract.Execute(&_Protection.TransactOpts, _user, _oneInchSwapCalldata)
}

// ExecuteOperation is a paid mutator transaction binding the contract method 0x920f5c84.
//
// Solidity: function executeOperation(address[] , uint256[] _amounts, uint256[] _premiums, address , bytes _params) returns(bool)
func (_Protection *ProtectionTransactor) ExecuteOperation(opts *bind.TransactOpts, arg0 []common.Address, _amounts []*big.Int, _premiums []*big.Int, arg3 common.Address, _params []byte) (*types.Transaction, error) {
	return _Protection.contract.Transact(opts, "executeOperation", arg0, _amounts, _premiums, arg3, _params)
}

// ExecuteOperation is a paid mutator transaction binding the contract method 0x920f5c84.
//
// Solidity: function executeOperation(address[] , uint256[] _amounts, uint256[] _premiums, address , bytes _params) returns(bool)
func (_Protection *ProtectionSession) ExecuteOperation(arg0 []common.Address, _amounts []*big.Int, _premiums []*big.Int, arg3 common.Address, _params []byte) (*types.Transaction, error) {
	return _Protection.Contract.ExecuteOperation(&_Protection.TransactOpts, arg0, _amounts, _premiums, arg3, _params)
}

// ExecuteOperation is a paid mutator transaction binding the contract method 0x920f5c84.
//
// Solidity: function executeOperation(address[] , uint256[] _amounts, uint256[] _premiums, address , bytes _params) returns(bool)
func (_Protection *ProtectionTransactorSession) ExecuteOperation(arg0 []common.Address, _amounts []*big.Int, _premiums []*big.Int, arg3 common.Address, _params []byte) (*types.Transaction, error) {
	return _Protection.Contract.ExecuteOperation(&_Protection.TransactOpts, arg0, _amounts, _premiums, arg3, _params)
}

// OneInchSwap is a paid mutator transaction binding the contract method 0x282fe23e.
//
// Solidity: function oneInchSwap(address _aToken, bytes _oneInchSwapCalldata) returns(uint256)
func (_Protection *ProtectionTransactor) OneInchSwap(opts *bind.TransactOpts, _aToken common.Address, _oneInchSwapCalldata []byte) (*types.Transaction, error) {
	return _Protection.contract.Transact(opts, "oneInchSwap", _aToken, _oneInchSwapCalldata)
}

// OneInchSwap is a paid mutator transaction binding the contract method 0x282fe23e.
//
// Solidity: function oneInchSwap(address _aToken, bytes _oneInchSwapCalldata) returns(uint256)
func (_Protection *ProtectionSession) OneInchSwap(_aToken common.Address, _oneInchSwapCalldata []byte) (*types.Transaction, error) {
	return _Protection.Contract.OneInchSwap(&_Protection.TransactOpts, _aToken, _oneInchSwapCalldata)
}

// OneInchSwap is a paid mutator transaction binding the contract method 0x282fe23e.
//
// Solidity: function oneInchSwap(address _aToken, bytes _oneInchSwapCalldata) returns(uint256)
func (_Protection *ProtectionTransactorSession) OneInchSwap(_aToken common.Address, _oneInchSwapCalldata []byte) (*types.Transaction, error) {
	return _Protection.Contract.OneInchSwap(&_Protection.TransactOpts, _aToken, _oneInchSwapCalldata)
}

// Register is a paid mutator transaction binding the contract method 0xbbc841ac.
//
// Solidity: function register(address _collateral, address _debt, uint16 _triggerRatio) payable returns()
func (_Protection *ProtectionTransactor) Register(opts *bind.TransactOpts, _collateral common.Address, _debt common.Address, _triggerRatio uint16) (*types.Transaction, error) {
	return _Protection.contract.Transact(opts, "register", _collateral, _debt, _triggerRatio)
}

// Register is a paid mutator transaction binding the contract method 0xbbc841ac.
//
// Solidity: function register(address _collateral, address _debt, uint16 _triggerRatio) payable returns()
func (_Protection *ProtectionSession) Register(_collateral common.Address, _debt common.Address, _triggerRatio uint16) (*types.Transaction, error) {
	return _Protection.Contract.Register(&_Protection.TransactOpts, _collateral, _debt, _triggerRatio)
}

// Register is a paid mutator transaction binding the contract method 0xbbc841ac.
//
// Solidity: function register(address _collateral, address _debt, uint16 _triggerRatio) payable returns()
func (_Protection *ProtectionTransactorSession) Register(_collateral common.Address, _debt common.Address, _triggerRatio uint16) (*types.Transaction, error) {
	return _Protection.Contract.Register(&_Protection.TransactOpts, _collateral, _debt, _triggerRatio)
}

// UnderlyingAsset is a paid mutator transaction binding the contract method 0xa64b5b8a.
//
// Solidity: function underlyingAsset(address _aToken) returns(address)
func (_Protection *ProtectionTransactor) UnderlyingAsset(opts *bind.TransactOpts, _aToken common.Address) (*types.Transaction, error) {
	return _Protection.contract.Transact(opts, "underlyingAsset", _aToken)
}

// UnderlyingAsset is a paid mutator transaction binding the contract method 0xa64b5b8a.
//
// Solidity: function underlyingAsset(address _aToken) returns(address)
func (_Protection *ProtectionSession) UnderlyingAsset(_aToken common.Address) (*types.Transaction, error) {
	return _Protection.Contract.UnderlyingAsset(&_Protection.TransactOpts, _aToken)
}

// UnderlyingAsset is a paid mutator transaction binding the contract method 0xa64b5b8a.
//
// Solidity: function underlyingAsset(address _aToken) returns(address)
func (_Protection *ProtectionTransactorSession) UnderlyingAsset(_aToken common.Address) (*types.Transaction, error) {
	return _Protection.Contract.UnderlyingAsset(&_Protection.TransactOpts, _aToken)
}

// ProtectionProtectionExercisedIterator is returned from FilterProtectionExercised and is used to iterate over the raw logs and unpacked data for ProtectionExercised events raised by the Protection contract.
type ProtectionProtectionExercisedIterator struct {
	Event *ProtectionProtectionExercised // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ProtectionProtectionExercisedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ProtectionProtectionExercised)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ProtectionProtectionExercised)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ProtectionProtectionExercisedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ProtectionProtectionExercisedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ProtectionProtectionExercised represents a ProtectionExercised event raised by the Protection contract.
type ProtectionProtectionExercised struct {
	User      common.Address
	Repaid    *big.Int
	Redeemed  *big.Int
	SwappedTo *big.Int
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterProtectionExercised is a free log retrieval operation binding the contract event 0x014a2a1b5d23b7bad4c57385eeb802287329d12c66122c4297e435883dce551d.
//
// Solidity: event ProtectionExercised(address user, uint256 repaid, uint256 redeemed, uint256 swappedTo)
func (_Protection *ProtectionFilterer) FilterProtectionExercised(opts *bind.FilterOpts) (*ProtectionProtectionExercisedIterator, error) {

	logs, sub, err := _Protection.contract.FilterLogs(opts, "ProtectionExercised")
	if err != nil {
		return nil, err
	}
	return &ProtectionProtectionExercisedIterator{contract: _Protection.contract, event: "ProtectionExercised", logs: logs, sub: sub}, nil
}

// WatchProtectionExercised is a free log subscription operation binding the contract event 0x014a2a1b5d23b7bad4c57385eeb802287329d12c66122c4297e435883dce551d.
//
// Solidity: event ProtectionExercised(address user, uint256 repaid, uint256 redeemed, uint256 swappedTo)
func (_Protection *ProtectionFilterer) WatchProtectionExercised(opts *bind.WatchOpts, sink chan<- *ProtectionProtectionExercised) (event.Subscription, error) {

	logs, sub, err := _Protection.contract.WatchLogs(opts, "ProtectionExercised")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ProtectionProtectionExercised)
				if err := _Protection.contract.UnpackLog(event, "ProtectionExercised", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseProtectionExercised is a log parse operation binding the contract event 0x014a2a1b5d23b7bad4c57385eeb802287329d12c66122c4297e435883dce551d.
//
// Solidity: event ProtectionExercised(address user, uint256 repaid, uint256 redeemed, uint256 swappedTo)
func (_Protection *ProtectionFilterer) ParseProtectionExercised(log types.Log) (*ProtectionProtectionExercised, error) {
	event := new(ProtectionProtectionExercised)
	if err := _Protection.contract.UnpackLog(event, "ProtectionExercised", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ProtectionProtectionRegisteredIterator is returned from FilterProtectionRegistered and is used to iterate over the raw logs and unpacked data for ProtectionRegistered events raised by the Protection contract.
type ProtectionProtectionRegisteredIterator struct {
	Event *ProtectionProtectionRegistered // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ProtectionProtectionRegisteredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ProtectionProtectionRegistered)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ProtectionProtectionRegistered)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ProtectionProtectionRegisteredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ProtectionProtectionRegisteredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ProtectionProtectionRegistered represents a ProtectionRegistered event raised by the Protection contract.
type ProtectionProtectionRegistered struct {
	User         common.Address
	AToken       common.Address
	DebtAsset    common.Address
	TriggerRatio uint16
	GasValue     *big.Int
	Raw          types.Log // Blockchain specific contextual infos
}

// FilterProtectionRegistered is a free log retrieval operation binding the contract event 0x4fc627d8f454b5a4c0a2e170a04bbd06dc16139c80c03e0e0ed6a49b1ae79b6f.
//
// Solidity: event ProtectionRegistered(address user, address aToken, address debtAsset, uint16 triggerRatio, uint256 gasValue)
func (_Protection *ProtectionFilterer) FilterProtectionRegistered(opts *bind.FilterOpts) (*ProtectionProtectionRegisteredIterator, error) {

	logs, sub, err := _Protection.contract.FilterLogs(opts, "ProtectionRegistered")
	if err != nil {
		return nil, err
	}
	return &ProtectionProtectionRegisteredIterator{contract: _Protection.contract, event: "ProtectionRegistered", logs: logs, sub: sub}, nil
}

// WatchProtectionRegistered is a free log subscription operation binding the contract event 0x4fc627d8f454b5a4c0a2e170a04bbd06dc16139c80c03e0e0ed6a49b1ae79b6f.
//
// Solidity: event ProtectionRegistered(address user, address aToken, address debtAsset, uint16 triggerRatio, uint256 gasValue)
func (_Protection *ProtectionFilterer) WatchProtectionRegistered(opts *bind.WatchOpts, sink chan<- *ProtectionProtectionRegistered) (event.Subscription, error) {

	logs, sub, err := _Protection.contract.WatchLogs(opts, "ProtectionRegistered")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ProtectionProtectionRegistered)
				if err := _Protection.contract.UnpackLog(event, "ProtectionRegistered", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseProtectionRegistered is a log parse operation binding the contract event 0x4fc627d8f454b5a4c0a2e170a04bbd06dc16139c80c03e0e0ed6a49b1ae79b6f.
//
// Solidity: event ProtectionRegistered(address user, address aToken, address debtAsset, uint16 triggerRatio, uint256 gasValue)
func (_Protection *ProtectionFilterer) ParseProtectionRegistered(log types.Log) (*ProtectionProtectionRegistered, error) {
	event := new(ProtectionProtectionRegistered)
	if err := _Protection.contract.UnpackLog(event, "ProtectionRegistered", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
